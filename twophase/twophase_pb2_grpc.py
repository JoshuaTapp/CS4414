# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import twophase_pb2 as twophase__pb2


class WorkerStub(object):
    """Mandatory methods: 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCommitted = channel.unary_unary(
                '/Worker/GetCommitted',
                request_serializer=twophase__pb2.GetCommittedArgs.SerializeToString,
                response_deserializer=twophase__pb2.MaybeValue.FromString,
                )
        self.SetValue = channel.unary_unary(
                '/Worker/SetValue',
                request_serializer=twophase__pb2.MaybeValue.SerializeToString,
                response_deserializer=twophase__pb2.Empty.FromString,
                )
        self.Vote = channel.unary_unary(
                '/Worker/Vote',
                request_serializer=twophase__pb2.MaybeValue.SerializeToString,
                response_deserializer=twophase__pb2.Empty.FromString,
                )


class WorkerServicer(object):
    """Mandatory methods: 
    """

    def GetCommitted(self, request, context):
        """return the currently committed value, if it is known,
        or indicate that it is unavailable 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetValue(self, request, context):
        """Method you are likely to change used by base implementation: 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Vote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCommitted': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommitted,
                    request_deserializer=twophase__pb2.GetCommittedArgs.FromString,
                    response_serializer=twophase__pb2.MaybeValue.SerializeToString,
            ),
            'SetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetValue,
                    request_deserializer=twophase__pb2.MaybeValue.FromString,
                    response_serializer=twophase__pb2.Empty.SerializeToString,
            ),
            'Vote': grpc.unary_unary_rpc_method_handler(
                    servicer.Vote,
                    request_deserializer=twophase__pb2.MaybeValue.FromString,
                    response_serializer=twophase__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Worker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker(object):
    """Mandatory methods: 
    """

    @staticmethod
    def GetCommitted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/GetCommitted',
            twophase__pb2.GetCommittedArgs.SerializeToString,
            twophase__pb2.MaybeValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/SetValue',
            twophase__pb2.MaybeValue.SerializeToString,
            twophase__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Vote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Worker/Vote',
            twophase__pb2.MaybeValue.SerializeToString,
            twophase__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CoordinatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetValue = channel.unary_unary(
                '/Coordinator/SetValue',
                request_serializer=twophase__pb2.MaybeValue.SerializeToString,
                response_deserializer=twophase__pb2.Empty.FromString,
                )
        self.Prepare = channel.unary_unary(
                '/Coordinator/Prepare',
                request_serializer=twophase__pb2.MaybeValue.SerializeToString,
                response_deserializer=twophase__pb2.Empty.FromString,
                )


class CoordinatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetValue(self, request, context):
        """Mandatory methods: 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prepare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoordinatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetValue,
                    request_deserializer=twophase__pb2.MaybeValue.FromString,
                    response_serializer=twophase__pb2.Empty.SerializeToString,
            ),
            'Prepare': grpc.unary_unary_rpc_method_handler(
                    servicer.Prepare,
                    request_deserializer=twophase__pb2.MaybeValue.FromString,
                    response_serializer=twophase__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Coordinator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Coordinator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Coordinator/SetValue',
            twophase__pb2.MaybeValue.SerializeToString,
            twophase__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Prepare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Coordinator/Prepare',
            twophase__pb2.MaybeValue.SerializeToString,
            twophase__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
